service: alexa-experiment-notes

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}-notes
    AWS_ACCOUNT: ${file(config/alexa-config-${opt:stage, self:provider.stage}.yml):AWS_ACCOUNT}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


custom:
  alexa:
    vendorId: ${file(config/alexa-config-${opt:stage, self:provider.stage}.yml):AMAZON_VENDOR_ID}
    clientId: ${file(config/alexa-config-${opt:stage, self:provider.stage}.yml):AMAZON_CLIENT_ID}
    clientSecret: ${file(config/alexa-config-${opt:stage, self:provider.stage}.yml):AMAZON_CLIENT_SECRET}
    skills:
      - id: ${file(config/alexa-config-${opt:stage, self:provider.stage}.yml):ALEXA_SKILL_ID}
        manifest:
          publishingInformation:
            locales:
              en-US: 
                name: Meltzer Notes

          apis:
            custom:
              endpoint:  
                uri: arn:aws:lambda:${self:provider.region}:${self:provider.environment.AWS_ACCOUNT}:function:${self:service}-${self:provider.stage}-notesSkillIntentRouter
          manifestVersion: '1.0'
        models:
          en-US:
            interactionModel:
              languageModel:
                invocationName: meltzer notes
                intents:
                  - name: GetNote
                    samples:
                     - "Get a note"
                     - "Give me a note" 
                     - "Get one"
                     - "Get it"
                  - name: AMAZON.StopIntent
                    samples:
                     - "goodbye"
                     - "bye"
                     - "exit"       
          
functions:
  notesSkillIntentRouter:
    handler: notesSkillIntentRouter.route
    events:
      - alexaSkill: ${file(config/alexa-config-${opt:stage, self:provider.stage}.yml):ALEXA_SKILL_ID}
      

resources:
  Resources:
    NotesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}


plugins:
  - serverless-alexa-skills